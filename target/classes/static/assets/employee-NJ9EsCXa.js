var f=Object.defineProperty;var v=(r,l,t)=>l in r?f(r,l,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[l]=t;var m=(r,l,t)=>v(r,typeof l!="symbol"?l+"":l,t);import{R as b,j as e}from"./index-DQkY96rc.js";import{a as u}from"./axios-Bf4ed8-h.js";import{C as N,a as E}from"./CRow-DMBw-idI.js";import{C as P,a as S}from"./CCardBody-Dka9-WXd.js";import{C as L}from"./CCardHeader-3ISR4CqK.js";import{a as p}from"./index.esm-CsVMth3X.js";import{C as T,a as M,b as x,c as o,d as D,e as s}from"./CTable-Hg-7IAkc.js";import{P as w}from"./Pagination-Db4ijxZz.js";import{C as I,a as k,b as A,c as R,d as U}from"./CModalTitle-CeHpYnfN.js";import{C as F}from"./CForm-DinUw6Fq.js";import{C as c}from"./CFormLabel-D-i2Ydtg.js";import{C as g}from"./CFormInput-2XdN1xrD.js";import{C as _}from"./CFormSelect-PnEkIC5P.js";import"./DefaultLayout-DkBJ2y_r.js";import"./cil-user-Dlmw-Gem.js";import"./CFormControlWrapper-C9xCSD9I.js";import"./CFormControlValidation-D6H3tTV0.js";const y="http://localhost:8080/api/employees";class ${getEmployee(){return u.get(`${y}/getall`)}getEmployeeAtPage(l){return u.get(`${y}/getEmployeePage?page=${l}`)}}const C=new $;class ae extends b.Component{constructor(t){super(t);m(this,"handlePageChange",(t,i)=>{this.setState({currentPage:i})});m(this,"toggleModal",(t=null)=>{this.setState(i=>({showModal:!i.showModal,editEmployee:t,newEmployee:t||{id:"",fullName:"",birthDate:"",phoneNumber:"",email:"",gender:""}}))});m(this,"handleInputChange",t=>{const{name:i,value:n}=t.target;this.setState(d=>({newEmployee:{...d.newEmployee,[i]:n}}))});m(this,"handleSave",()=>{const{newEmployee:t,editEmployee:i}=this.state,n={id:9999,fullName:t.fullName,birthDate:t.birthDate,phoneNumber:t.phoneNumber,email:t.email,gender:t.gender,status:1};if(t.fullName==""){alert("Vui lòng nhập họ tên");return}if(t.birthDate==""){alert("Vui lòng nhập ngày sinh");return}if(t.phoneNumber==""){alert("Vui lòng nhập số điện thoại");return}if(t.email==""){alert("Vui lòng nhập email");return}if(t.gender==""){alert("Vui lòng nhập giới tính");return}i?(alert("Sửa thông tin nhân viên: "+JSON.stringify(n)),console.log("Sửa thông tin nhân viên",n),fetch(`http://localhost:8080/api/employees/update/${i.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then(a=>{console.log("data trả về nè",a),a.ok?(alert("Sửa thông tin nhân viên thành công rồi nè"),this.toggleModal(),this.fetchEmployees(this.state.currentPage)):(alert("Có lỗi xảy ra khi sửa thông tin ở trong"),console.error("Lỗi sửa thông tin:",a))}).catch(a=>{alert("Có lỗi xảy ra khi sửa thông tin"),console.error("Lỗi sửa thông tin:",a)})):(alert("Thêm thông tin nhân viên"+JSON.stringify(n)),console.log("Thêm thông tin nhân viên",n),fetch("http://localhost:8080/api/employees/add",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then(a=>{console.log("data trả về nè",a),a.ok?(alert("Thêm thông tin nhân viên thành công rồi nè"),this.toggleModal(),this.fetchEmployees(this.state.currentPage)):(alert("Có lỗi xảy ra khi thêm thông tin nhân viên ở trong"),console.error("Lỗi thêm thông tin nhân viên:",a))}).catch(a=>{alert("Có lỗi xảy ra khi thêm thông tin nhân viên"),console.error("Lỗi thêm thông tin nhân viên:",a)}))});m(this,"handleDelete",t=>{fetch(`http://localhost:8080/api/employees/updateStatus/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({status:0})}).then(n=>{console.log("Response:",n),n.ok?(alert("Xóa thông tin nhân viên thành công rồi nè"),this.fetchEmployees(this.state.currentPage)):(alert("Có lỗi xảy ra khi xóa thông tin nhân viên"),console.error("Lỗi xóa thông tin nhân viên:",n))}).catch(n=>{alert("Có lỗi xảy ra khi xóa thông tin nhân viên"),console.error("Lỗi xóa thông tin nhân viên:",n)})});this.state={employees:[],currentPage:1,pageLimit:0,perPage:5,editEmployee:null,showModal:!1,newEmployee:{id:"",fullName:"",birthDate:"",phoneNumber:"",email:"",gender:""}}}componentDidMount(){C.getEmployee().then(t=>{const{data:i}=t,n=Math.ceil(i.length/this.state.perPage);this.setState({pageLimit:n})}).catch(t=>{console.error("Lỗi fetch employees:",t)}),this.fetchEmployees(1)}componentDidUpdate(t,i){i.currentPage!==this.state.currentPage&&this.fetchEmployees(this.state.currentPage)}fetchEmployees(t){C.getEmployeeAtPage(t).then(i=>{const{data:n}=i;this.setState({employees:n})}).catch(i=>{console.error("Lỗi fetch employees:",i)})}render(){const{employees:t,currentPage:i,pageLimit:n,showModal:d,newEmployee:a}=this.state;return Array.isArray(t)?e.jsxs(N,{children:[e.jsx(E,{children:e.jsxs(P,{children:[e.jsxs(L,{children:["Employee Information",e.jsx(p,{color:"primary",className:"float-end",onClick:()=>this.toggleModal(),children:"Thêm nhân viên"})]}),e.jsxs(S,{children:[e.jsxs(T,{children:[e.jsx(M,{children:e.jsxs(x,{children:[e.jsx(o,{children:"Mã nhân viên"}),e.jsx(o,{children:"Họ tên"}),e.jsx(o,{children:"Giới tính"}),e.jsx(o,{children:"Ngày sinh"}),e.jsx(o,{children:"Số điện thoại"}),e.jsx(o,{children:"Email"}),e.jsx(o,{children:"Hành động"})]})}),e.jsx(D,{children:t.map((h,j)=>e.jsxs(x,{children:[e.jsx(s,{children:h.id}),e.jsx(s,{children:h.fullName}),e.jsx(s,{children:h.gender}),e.jsx(s,{children:h.birthDate}),e.jsx(s,{children:h.phoneNumber}),e.jsx(s,{children:h.email}),e.jsxs(s,{children:[e.jsx(p,{color:"warning",onClick:()=>this.toggleModal(h),children:"Sửa"}),e.jsx(p,{color:"danger",onClick:()=>this.handleDelete(h.id),children:"Xóa"})]})]},j))})]}),e.jsx(w,{count:n,page:i,onChange:this.handlePageChange,variant:"outlined",shape:"rounded"})]})]})}),e.jsxs(I,{visible:d,onClose:()=>this.toggleModal(),children:[e.jsx(k,{children:e.jsx(A,{children:this.state.editEmployee?"Chỉnh sửa thông tin nhân viên":"Thêm thông tin nhân viên"})}),e.jsx(R,{children:e.jsxs(F,{children:[e.jsxs("div",{className:"mb-3",children:[e.jsx(c,{htmlFor:"employeeName",children:"Tên nhân viên"}),e.jsx(g,{type:"text",id:"employeeName",name:"fullName",value:a.fullName,onChange:this.handleInputChange})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(c,{htmlFor:"employeebirthDate",children:"Ngày sinh"}),e.jsx(g,{type:"text",id:"employeebirthDate",name:"birthDate",value:a.birthDate,onChange:this.handleInputChange})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(c,{htmlFor:"employeePhoneNumber",children:"Số điện thoại"}),e.jsx(g,{type:"text",id:"employeePhoneNumber",name:"phoneNumber",value:a.phoneNumber,onChange:this.handleInputChange})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(c,{htmlFor:"employeeEmail",children:"Email"}),e.jsx(g,{type:"text",id:"employeeEmail",name:"email",value:a.email,onChange:this.handleInputChange})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(c,{htmlFor:"employeeGender",children:"Giới tính"}),e.jsxs(_,{id:"employeeGender",name:"gender",value:this.state.newEmployee.gender,onChange:this.handleInputChange,children:[e.jsx("option",{value:"",children:"Chọn giới tính"}),e.jsx("option",{value:"0",children:"Nam"}),e.jsx("option",{value:"1",children:"Nữ"})]})]})]})}),e.jsx(U,{children:e.jsx(p,{color:"primary",onClick:this.handleSave,children:this.state.editEmployee?"Cập nhật":"Lưu"})})]})]}):(console.error("Employees is not an array:",t),null)}}export{ae as default};
